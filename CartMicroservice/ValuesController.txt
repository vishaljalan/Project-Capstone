public class CartController : Controller
    {
        private readonly IMediator _mediator;
        private readonly CapstoneDbContext _context;

        public CartController(IMediator mediator, CapstoneDbContext context)
        {
            _mediator = mediator;
            _context = context;
        }


        public async Task<IActionResult> AddToCart(int productId)
        {
            var currentUser = _context.Users.SingleOrDefault(u => u.Username == User.Identity.Name);
            await _mediator.Send(new AddToCartCommand(productId, currentUser.Id));
            return RedirectToAction("GetCart");
        }

        public async Task<IActionResult> GetCart()
        {
            var currentUser = _context.Users.SingleOrDefault(u => u.Username == User.Identity.Name);
            var cart = await _mediator.Send(new GetCartQuery(currentUser.Id));
            return View(cart);
        }

        public async Task<IActionResult> UpdateCartItem(int cartItemId, int quantity)
        {
            await _mediator.Send(new UpdateCartItemCommand(cartItemId, quantity));
            return RedirectToAction("GetCart");
        }

        public async Task<IActionResult> RemoveCartItem(int cartItemId)
        {
            await _mediator.Send(new RemoveCartItemCommand(cartItemId));
            return RedirectToAction("GetCart");
        }

        public async Task<IActionResult> Checkout()
        {
            var currentUser = _context.Users.SingleOrDefault(u => u.Username == User.Identity.Name);
            await _mediator.Send(new CheckoutCommand(currentUser.Id));
            return View();
        }